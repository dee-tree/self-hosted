# replace "mydomain" with your own domain

# http with redirect to https and with .well-known path for certbot
server {
    listen 80;

    server_name example.mydomain.com;
    server_tokens off;

    location /.well-known/ {
        root /var/www/example.mydomain.com;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 50<local_port> ssl proxy_protocol;
    server_name example.mydomain.com;

    ssl_certificate /etc/nginx/ssl/live/example.mydomain.com/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/example.mydomain.com/privkey.pem;
    
    add_header Content-Security-Policy upgrade-insecure-requests;

    location / {
        #
        # The following proxying setup is useful when the service is running
        # in any other url/port (for example locally) to redirect requests to this service.
        # Note: if the service is running on the same docker network, 
        #       as it url its docker name and internal docker port should be used.
        #
        proxy_redirect off;
        proxy_pass http://serviceurl:<serviceport>; # service path
        proxy_set_header Upgrade           $http_upgrade;
        proxy_set_header Connection        "upgrade";
        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port  $server_port;
    }
}