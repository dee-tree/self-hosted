# replace "mydomain" with your own domain

# http with redirect to https and with .well-known path for certbot
server {
    listen 80;

    server_name seafile.mydomain.com;
    server_tokens off;

    location /.well-known/ {
        root /var/www/seafile.mydomain.com;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 50105 ssl proxy_protocol;
    server_name seafile.mydomain.com;

    ssl_certificate /etc/nginx/ssl/live/seafile.mydomain.com/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/seafile.mydomain.com/privkey.pem;
    
    add_header Content-Security-Policy upgrade-insecure-requests;
    proxy_set_header X-Forwarded-For $remote_addr;

    location / {
        #
        # The following proxying setup is useful when the service is running
        # in any other url/port (for example locally) to redirect requests to this service.
        # Note: if the service is running on the same docker network, 
        #       as it url its docker name and internal docker port should be used.
        #
        proxy_pass http://seafile:80; # service path
        proxy_http_version 1.1;
        proxy_set_header Connection        "";
        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;

        # used for view/edit office file via Office Online Server
        client_max_body_size 0;

        access_log      /var/log/nginx/seafile.access.log;
        error_log       /var/log/nginx/seafile.error.log;
    }

    location /seafdav {
        rewrite ^/seafdav$ /seafdav/ permanent;
    }

    location /seafdav/ {
        proxy_pass         http://seafile:80/seafdav/;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
        # proxy_set_header   X-Forwarded-Proto $scheme;
        proxy_set_header   X-Forwarded-Proto https;
        proxy_read_timeout  1200s;
        client_max_body_size 0;

        access_log      /var/log/nginx/seafdav.access.log;
        error_log       /var/log/nginx/seafdav.error.log;
    }

    location /:dir_browser {
        proxy_pass         http://seafile:80/:dir_browser;
    }


    # seadoc

    # location /sdoc-server/ {
    #     proxy_pass         http://seadoc:80/;
    #     proxy_redirect     off;
    #     proxy_set_header   Host              $host;
    #     proxy_set_header   X-Real-IP         $remote_addr;
    #     proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
    #     proxy_set_header   X-Forwarded-Host  $server_name;
    #     proxy_set_header   X-Forwarded-Proto $scheme;

    #     client_max_body_size 100m;
    # }

    # location /socket.io {
    #     proxy_pass http://seadoc:80;
    #     proxy_http_version 1.1;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection 'upgrade';
    #     proxy_redirect off;

    #     proxy_buffers 8 32k;
    #     proxy_buffer_size 64k;

    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header Host $http_host;
    #     proxy_set_header X-NginX-Proxy true;
    # }
}