# replace "mydomain" with your own domain

events {
    worker_connections 1024;
}

stream {
    map $ssl_preread_server_name $pass_domains {
        # baikal.mydomain.com baikal; # baikal --- uncomment if used
        # obsidian.mydomain.com obsidian; # obsidian --- uncomment if used
        # kopia.mydomain.com kopia; # obsidian --- uncomment if used
        # servername.com xtls; # xtls reality sni --- uncomment if used
    }
    
    # uncomment service upstream if used

    # upstream xtls {
        # server xray:50101; # xray port
    # }

    # upstream baikal {
        # server reverse-proxy:50102; # baikal port
    # }

    # upstream obsidian {
        # server reverse-proxy:50103; # baikal port
    # }

    # upstream kopia {
        # server reverse-proxy:50110; # kopia port
    # }

    server {
        listen 443      reuseport;
        listen [::]:443 reuseport;
        proxy_pass      $pass_domains;
        ssl_preread     on;
        proxy_protocol  on;
    }
}

http {

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ""      close;
    }

    map $proxy_protocol_addr $proxy_forwarded_elem {
        ~^[0-9.]+$        "for=$proxy_protocol_addr";
        ~^[0-9A-Fa-f:.]+$ "for=\"[$proxy_protocol_addr]\"";
        default           "for=unknown";
    }

    map $http_forwarded $proxy_add_forwarded {
        "~^(,[ \\t]*)*([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?(;([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?)*([ \\t]*,([ \\t]*([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?(;([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?)*)?)*$" "$http_forwarded, $proxy_forwarded_elem";
        default "$proxy_forwarded_elem";
    }

# increase cache to store more sessions
ssl_session_cache   shared:SSL:10m;
ssl_session_timeout 1h;

# http with redirect to https and with .well-known path for certbot
server {
    listen 80;

    server_name mydomain.com;
    server_tokens off;

    location /.well-known/ {
        root /var/www/mydomain.com;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

include /etc/nginx/conf.d/*.conf;

}
