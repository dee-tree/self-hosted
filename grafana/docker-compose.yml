services:
  grafana:
    image: grafana/grafana-enterprise:latest-ubuntu
    container_name: grafana
    restart: always
    ports:
      - "127.0.0.1:${GRAFANA_PORT}:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - grafana-config:/etc/grafana
    networks:
      - revproxy # don't forget to create the network manually via docker
    environment:
      - TZ=$TZ
      - GF_SERVER_ROOT_URL=https://monitor.mydomain.com

  prometheus:
    image: prom/prometheus:latest
    container_name: grafana-prometheus
    restart: always
    ports:
      - "127.0.0.1:${PROMETHEUS_PORT}:9090"
    volumes:
      - prometheus-data:/prometheus
      - prometheus-config:/etc/prometheus
    networks:
      - revproxy # don't forget to create the network manually via docker
    environment:
      - TZ=$TZ

  node-exporter:
    image: prom/node-exporter:latest
    container_name: grafana-node-exporter
    restart: always
    ports:
      - "127.0.0.1:${NODE_EXPORTER_PORT}:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /var/log/ups:/var/log/ups:ro
      # - attach other mount mount points here
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.textfile.directory=/var/log/ups' # for rasberry-pi 5 UPS
      - '--collector.filesystem.mount-points-exclude'
      - '^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)'
    networks:
      - revproxy # don't forget to create the network manually via docker
    environment:
      - TZ=$TZ

networks:
  revproxy:
    external: true

volumes:
  grafana-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${VGRAFANA_DATA_PATH}
  grafana-config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${VGRAFANA_CONFIG_PATH}
  prometheus-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${VPROMETHEUS_DATA_PATH}
  prometheus-config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${VPROMETHEUS_CONFIG_PATH}